#!/usr/bin/env ruby

require_relative '../lib/pak'

require 'gli'
require 'dry-container'

# Cli main parser
class Cli
  extend GLI::App

  program_desc 'a handy runner of distributions packages manager commands. '

  version Pak::VERSION

  subcommand_option_handling :normal
  arguments :strict

  def self.services
    container = Dry::Container.new
    container.register :utils, Pak::Utils.new
  end

  UTILS = services.resolve(:utils)
  BASE = Pak::Main.new(UTILS)

  desc 'Install a Package from Repositories'
  arg_name 'Describe arguments to install here'
  command :install do |c|
    c.arg 'arguments'
    c.action do |_, _, args|
      BASE.tap do |x|
        x.action = :install
        x.arguments = args
      end.run
    end
  end

  desc 'Remove One or More Installed Packages'
  arg_name 'Describe arguments to remove here'
  command :remove do |c|
    c.action do |_, _, args|
      BASE.tap do |x|
        x.action = :remove
        x.arguments = args
      end.run
    end
  end

  desc 'Find a Package'
  arg_name 'Describe arguments to search here'
  command :search do |c|
    c.action do |_, _, args|
      BASE.tap do |x|
        x.action = :search
        x.arguments = args
      end.run
    end
  end

  desc 'Update Package Lists'
  arg_name 'Describe arguments to update here'
  command :update do |c|
    c.action do
      BASE.tap do |x|
        x.action = :update
      end.run
    end
  end

  desc 'Upgrade Installed Packages'
  arg_name 'Describe arguments to upgrade here'
  command :upgrade do |c|
    c.action do
      BASE.tap do |x|
        x.action = :upgrade
      end.run
    end
  end

  desc 'Clean system residual packages dependencies'
  arg_name 'Describe arguments to clean here'
  command :clean do |c|
    c.action do |_, _, args|
      BASE.tap do |x|
        x.action = :clean
        x.arguments = args
      end.run
    end
  end

  desc 'Download package binary'
  arg_name 'Describe arguments to download here'
  command :download do |c|
    c.action do |_, _, args|
      BASE.tap do |x|
        x.action = :download
        x.arguments = args
      end.run
    end
  end

  desc 'List installed packages'
  arg_name 'Describe arguments to installed here'
  command :installed do |c|
    c.action do |_, _, args|
      BASE.tap do |x|
        x.action = :installed
        x.arguments = args
      end.run
    end
  end

  desc 'View Info About a Specific Package'
  arg_name 'Describe arguments to info here'
  command :info do |c|
    c.action do |_, _, args|
      BASE.tap do |x|
        x.action = :info
        x.arguments = args
      end.run
    end
  end

  desc 'Fix system issues'
  arg_name 'Describe arguments to fix here'
  command :fix do |c|
    c.action do |_, _, args|
      BASE.tap do |x|
        x.action = :fix
        x.arguments = args
      end.run
    end
  end
end

exit Cli.run(ARGV)
